<?php
// –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ Telegram –±–æ—Ç–∞ –∏ –ø–æ–∏—Å–∫–∞ Chat ID
header('Content-Type: text/html; charset=UTF-8');

$telegramToken = '7808482676:AAEM-SN7WMoy-lJlkD0LMEuDW2C_zw4AfDM';
$telegramGroupChatId = '-1002652686710';
$telegramCustomerChatId = '7501193489'; // ID –ª–∏—á–Ω–æ–≥–æ —á–∞—Ç–∞ –î–º–∏—Ç—Ä–∏—è

echo "<h2>–¢–µ—Å—Ç Telegram –±–æ—Ç–∞ - –ú–ê–ù–ò–ü–£–õ–Ø–¢–û–†</h2>";

// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
echo "<h3>1. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:</h3>";
$botInfoUrl = "https://api.telegram.org/bot{$telegramToken}/getMe";
$botInfo = @file_get_contents($botInfoUrl);
if ($botInfo) {
    $botData = json_decode($botInfo, true);
    if ($botData && isset($botData['ok']) && $botData['ok']) {
        echo "<p style='color: green;'>‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: @{$botData['result']['username']} ({$botData['result']['first_name']})</p>";
    } else {
        echo "<p style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ: " . ($botData['description'] ?? 'Unknown error') . "</p>";
    }
} else {
    echo "<p style='color: red;'>‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ</p>";
}

// 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø–µ
echo "<h3>2. –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø–µ:</h3>";
$chatMemberUrl = "https://api.telegram.org/bot{$telegramToken}/getChatMember?chat_id={$telegramGroupChatId}&user_id=7808482676";
$chatMember = @file_get_contents($chatMemberUrl);
if ($chatMember) {
    $memberData = json_decode($chatMember, true);
    if ($memberData && isset($memberData['ok']) && $memberData['ok']) {
        $status = $memberData['result']['status'];
        $canSendMessages = isset($memberData['result']['can_send_messages']) ? $memberData['result']['can_send_messages'] : false;
        
        echo "<p>–°—Ç–∞—Ç—É—Å: <strong>$status</strong></p>";
        echo "<p>–ú–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è: <strong>" . ($canSendMessages ? '–î–∞' : '–ù–µ—Ç') . "</strong></p>";
        
        if ($status === 'administrator' && $canSendMessages) {
            echo "<p style='color: green;'>‚úÖ –ë–æ—Ç –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è</p>";
        } elseif ($status === 'member') {
            echo "<p style='color: orange;'>‚ö†Ô∏è –ë–æ—Ç —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –≥—Ä—É–ø–ø—ã, –Ω–æ –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</p>";
        } else {
            echo "<p style='color: red;'>‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø—Ä–∞–≤–∞–º–∏ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø–µ</p>";
        }
    } else {
        echo "<p style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞: " . ($memberData['description'] ?? 'Unknown error') . "</p>";
    }
} else {
    echo "<p style='color: red;'>‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø–µ</p>";
}

// 3. –ü–û–ò–°–ö CHAT ID –ó–ê–ö–ê–ó–ß–ò–ö–ê - –ø–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞
echo "<h3>3. –ü–æ–∏—Å–∫ Chat ID –∑–∞–∫–∞–∑—á–∏–∫–∞ (–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞):</h3>";
echo "<p><strong>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</strong></p>";
echo "<ol>";
echo "<li>–ü–æ–ø—Ä–æ—Å–∏—Ç–µ –∑–∞–∫–∞–∑—á–∏–∫–∞ –Ω–∞–ø–∏—Å–∞—Ç—å –±–æ—Ç—É @recordica_forms_bot –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</li>";
echo "<li>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ü–æ–ª—É—á–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è' –Ω–∏–∂–µ</li>";
echo "<li>–ù–∞–π–¥–∏—Ç–µ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –µ–≥–æ Chat ID</li>";
echo "</ol>";

if (isset($_GET['get_updates'])) {
    $updatesUrl = "https://api.telegram.org/bot{$telegramToken}/getUpdates";
    $updates = @file_get_contents($updatesUrl);
    
    if ($updates) {
        $updatesData = json_decode($updates, true);
        if ($updatesData && isset($updatesData['ok']) && $updatesData['ok']) {
            echo "<p style='color: green;'>‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã:</p>";
            echo "<pre style='background: #f5f5f5; padding: 10px; border-radius: 5px; max-height: 400px; overflow-y: auto;'>";
            echo htmlspecialchars(json_encode($updatesData, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE));
            echo "</pre>";
            
            // –ü–∞—Ä—Å–∏–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º Chat ID
            if (!empty($updatesData['result'])) {
                echo "<h4>–ù–∞–π–¥–µ–Ω–Ω—ã–µ Chat ID:</h4>";
                $chatIds = [];
                foreach ($updatesData['result'] as $update) {
                    if (isset($update['message']['chat']['id'])) {
                        $chatId = $update['message']['chat']['id'];
                        $chatType = $update['message']['chat']['type'];
                        $chatTitle = isset($update['message']['chat']['title']) ? $update['message']['chat']['title'] : '';
                        $firstName = isset($update['message']['from']['first_name']) ? $update['message']['from']['first_name'] : '';
                        $lastName = isset($update['message']['from']['last_name']) ? $update['message']['from']['last_name'] : '';
                        $username = isset($update['message']['from']['username']) ? $update['message']['from']['username'] : '';
                        
                        $key = $chatId . '_' . $chatType;
                        if (!isset($chatIds[$key])) {
                            $chatIds[$key] = [
                                'id' => $chatId,
                                'type' => $chatType,
                                'title' => $chatTitle,
                                'name' => trim($firstName . ' ' . $lastName),
                                'username' => $username
                            ];
                        }
                    }
                }
                
                foreach ($chatIds as $chat) {
                    $name = $chat['name'] ?: $chat['title'] ?: $chat['username'] ?: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
                    echo "<p><strong>Chat ID:</strong> <code>{$chat['id']}</code> | <strong>–¢–∏–ø:</strong> {$chat['type']} | <strong>–ò–º—è:</strong> $name</p>";
                }
            }
        } else {
            echo "<p style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: " . ($updatesData['description'] ?? 'Unknown error') . "</p>";
        }
    } else {
        echo "<p style='color: red;'>‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</p>";
    }
} else {
    echo "<p><a href='?get_updates=1' class='btn' style='background: #4CAF50; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;'>–ü–æ–ª—É—á–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</a></p>";
}

// 4. –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É
echo "<h3>4. –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É:</h3>";
$testMessage = "üß™ *–¢–ï–°–¢–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï - –ú–ê–ù–ò–ü–£–õ–Ø–¢–û–†*

üìÖ –î–∞—Ç–∞: " . date('d.m.Y H:i:s') . "
üåê IP: " . $_SERVER['REMOTE_ADDR'] . "
üíª User Agent: " . $_SERVER['HTTP_USER_AGENT'] . "

–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞.";

$sendUrl = "https://api.telegram.org/bot{$telegramToken}/sendMessage";
$sendData = [
    'chat_id' => $telegramGroupChatId,
    'text' => $testMessage,
    'parse_mode' => 'Markdown'
];

// –ü—Ä–æ–±—É–µ–º cURL
if (function_exists('curl_init')) {
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $sendUrl);
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($sendData));
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_TIMEOUT, 10);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
    curl_setopt($ch, CURLOPT_HTTPHEADER, [
        'Content-Type: application/x-www-form-urlencoded'
    ]);
    
    $result = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    $curlError = curl_error($ch);
    curl_close($ch);
    
    if ($result !== false && $httpCode == 200) {
        $response = json_decode($result, true);
        if ($response && isset($response['ok']) && $response['ok']) {
            echo "<p style='color: green;'>‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ (cURL)</p>";
            echo "<p>Message ID: {$response['result']['message_id']}</p>";
        } else {
            echo "<p style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ (cURL): " . ($response['description'] ?? 'Unknown error') . "</p>";
        }
    } else {
        echo "<p style='color: red;'>‚ùå cURL –æ—à–∏–±–∫–∞: HTTP $httpCode, $curlError</p>";
    }
} else {
    echo "<p style='color: orange;'>‚ö†Ô∏è cURL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω</p>";
}

// 5. –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–∏—á–∫—É –∑–∞–∫–∞–∑—á–∏–∫—É
echo "<h3>5. –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ª–∏—á–∫—É –∑–∞–∫–∞–∑—á–∏–∫—É:</h3>";
$sendDataCustomer = [
    'chat_id' => $telegramCustomerChatId,
    'text' => $testMessage,
    'parse_mode' => 'Markdown'
];

// –ü—Ä–æ–±—É–µ–º cURL
if (function_exists('curl_init')) {
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $sendUrl);
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($sendDataCustomer));
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_TIMEOUT, 10);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
    curl_setopt($ch, CURLOPT_HTTPHEADER, [
        'Content-Type: application/x-www-form-urlencoded'
    ]);
    
    $result = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    $curlError = curl_error($ch);
    curl_close($ch);
    
    if ($result !== false && $httpCode == 200) {
        $response = json_decode($result, true);
        if ($response && isset($response['ok']) && $response['ok']) {
            echo "<p style='color: green;'>‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –ª–∏—á–∫—É –∑–∞–∫–∞–∑—á–∏–∫—É (cURL)</p>";
            echo "<p>Message ID: {$response['result']['message_id']}</p>";
        } else {
            echo "<p style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –ª–∏—á–∫—É (cURL): " . ($response['description'] ?? 'Unknown error') . "</p>";
        }
    } else {
        echo "<p style='color: red;'>‚ùå cURL –æ—à–∏–±–∫–∞ –¥–ª—è –ª–∏—á–∫–∏: HTTP $httpCode, $curlError</p>";
    }
} else {
    echo "<p style='color: orange;'>‚ö†Ô∏è cURL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω</p>";
}

// 6. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ
echo "<h3>6. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ:</h3>";
echo "<p>PHP –≤–µ—Ä—Å–∏—è: " . phpversion() . "</p>";
echo "<p>cURL –¥–æ—Å—Ç—É–ø–µ–Ω: " . (function_exists('curl_init') ? '–î–∞' : '–ù–µ—Ç') . "</p>";
echo "<p>allow_url_fopen: " . (ini_get('allow_url_fopen') ? '–í–∫–ª—é—á–µ–Ω' : '–í—ã–∫–ª—é—á–µ–Ω') . "</p>";
echo "<p>–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: " . date('Y-m-d H:i:s') . "</p>";

echo "<hr>";
echo "<p><a href='send-form.php' target='_blank'>–û—Ç–∫—Ä—ã—Ç—å send-form.php</a></p>";
echo "<p><a href='form-logs.txt' target='_blank'>–û—Ç–∫—Ä—ã—Ç—å –ª–æ–≥–∏ —Ñ–æ—Ä–º</a></p>";
?> 