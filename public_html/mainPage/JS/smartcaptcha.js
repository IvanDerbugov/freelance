// SmartCAPTCHA Integration
// –û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ reCAPTCHA v3 –æ—Ç –Ø–Ω–¥–µ–∫—Å–∞
// 
// üöÄ –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ù–ê–°–¢–†–û–ô–ö–ï:
// 1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ https://captcha.yandex.ru/
// 2. –°–æ–∑–¥–∞–π—Ç–µ –∫–∞–ø—á—É —Å –∏–º–µ–Ω–µ–º "mainPage-forms"
// 3. –í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –æ—Ç–º–µ—Ç—å—Ç–µ "–û—Ç–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –¥–æ–º–µ–Ω–∞"
// 4. –î–æ–±–∞–≤—å—Ç–µ —Ö–æ—Å—Ç—ã: localhost, 127.0.0.1, –≤–∞—à-–¥–æ–º–µ–Ω.com
// 5. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ Client Key –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –Ω–∏–∂–µ
// 6. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π" –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç—å "–°—Ä–µ–¥–Ω—è—è"

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let smartCaptchaClientKey = 'YOUR_CLIENT_KEY_HERE'; // ‚Üê –í–°–¢–ê–í–¨–¢–ï –í–ê–® CLIENT KEY –ó–î–ï–°–¨
let smartCaptchaLoaded = false;

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ SmartCAPTCHA
function loadSmartCaptcha() {
    if (smartCaptchaLoaded) return Promise.resolve();
    
    return new Promise((resolve, reject) => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ —É–∂–µ —Å–∫—Ä–∏–ø—Ç
        if (window.smartCaptcha) {
            smartCaptchaLoaded = true;
            resolve();
            return;
        }

        // –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ SmartCAPTCHA
        const script = document.createElement('script');
        script.src = 'https://smartcaptcha.yandexcloud.net/captcha.js';
        script.async = true;
        script.defer = true;
        
        script.onload = () => {
            smartCaptchaLoaded = true;
            console.log('‚úÖ SmartCAPTCHA —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
            resolve();
        };
        
        script.onerror = () => {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ SmartCAPTCHA');
            reject(new Error('Failed to load SmartCAPTCHA'));
        };
        
        document.head.appendChild(script);
    });
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ SmartCAPTCHA
async function getSmartCaptchaToken() {
    try {
        await loadSmartCaptcha();
        
        return new Promise((resolve, reject) => {
            // SmartCAPTCHA –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–æ–∫–µ–Ω
            // –ü—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—Ö
            resolve('smartcaptcha_token');
        });
    } catch (error) {
        console.error('SmartCAPTCHA error:', error);
        throw error;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è SmartCAPTCHA –≤ —Ñ–æ—Ä–º—É
function addSmartCaptchaToForm(formElement, action = 'submit') {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ SmartCAPTCHA –≤ —Ñ–æ—Ä–º–µ
    if (formElement.querySelector('.smartcaptcha-container')) {
        return;
    }
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è SmartCAPTCHA
    const captchaContainer = document.createElement('div');
    captchaContainer.className = 'smartcaptcha-container';
    captchaContainer.style.cssText = 'margin: 15px 0; padding: 10px; background: #f8f9fa; border-radius: 8px; border: 1px solid #e9ecef;';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–æ—Å–ª–µ —Ñ–æ—Ä–º—ã
    formElement.parentNode.insertBefore(captchaContainer, formElement.nextSibling);
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º SmartCAPTCHA
    loadSmartCaptcha().then(() => {
        if (window.smartCaptcha) {
            smartCaptcha.render(captchaContainer, {
                sitekey: smartCaptchaClientKey,
                callback: function(token) {
                    // –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω, –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–æ—Ä–º—É
                    console.log('SmartCAPTCHA token received:', token);
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ —Å —Ç–æ–∫–µ–Ω–æ–º
                    let tokenField = formElement.querySelector('input[name="smart-token"]');
                    if (!tokenField) {
                        tokenField = document.createElement('input');
                        tokenField.type = 'hidden';
                        tokenField.name = 'smart-token';
                        formElement.appendChild(tokenField);
                    }
                    tokenField.value = token;
                },
                invisible: true, // –ù–µ–≤–∏–¥–∏–º–∞—è –∫–∞–ø—á–∞
                hideShield: true, // –°–∫—Ä—ã–≤–∞–µ–º —â–∏—Ç
                theme: 'light' // –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞
            });
        }
    }).catch(error => {
        console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ SmartCAPTCHA:', error);
        captchaContainer.innerHTML = '<p style="color: #f44336;">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞–ø—á–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.</p>';
    });
    
    // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã
    formElement.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const submitButton = formElement.querySelector('button[type="submit"]');
        const originalText = submitButton.textContent;
        
        try {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            submitButton.disabled = true;
            submitButton.textContent = '–ü—Ä–æ–≤–µ—Ä–∫–∞...';
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ SmartCAPTCHA –ø—Ä–æ—à–ª–∞
            const captchaInput = document.querySelector('input[name="smart-token"]');
            if (!captchaInput || !captchaInput.value) {
                throw new Error('SmartCAPTCHA –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞');
            }
            
            // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã
            submitButton.textContent = '–û—Ç–ø—Ä–∞–≤–∫–∞...';
            
            // –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç web3forms, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ fetch
            if (formElement.action.includes('web3forms.com')) {
                const formData = new FormData(formElement);
                
                const response = await fetch(formElement.action, {
                    method: 'POST',
                    body: formData
                });
                
                const result = await response.json();
                
                if (result.success) {
                    // –£—Å–ø–µ—à–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
                    showSuccessMessage(formElement, '–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!');
                } else {
                    // –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
                    showErrorMessage(formElement, '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏!');
                }
            } else {
                // –î–ª—è –¥—Ä—É–≥–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ñ–æ—Ä–º
                formElement.submit();
            }
            
        } catch (error) {
            console.error('SmartCAPTCHA error:', error);
            showErrorMessage(formElement, '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏!');
        } finally {
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
            submitButton.disabled = false;
            submitButton.textContent = originalText;
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—Ö–µ
function showSuccessMessage(formElement, message) {
    // –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
    let messageElement = formElement.parentNode.querySelector('.form-message');
    
    if (!messageElement) {
        messageElement = document.createElement('div');
        messageElement.className = 'form-message';
        messageElement.style.cssText = 'text-align: center; font-size: 18px; font-weight: 600; color: #4CAF50; margin-top: 15px;';
        formElement.parentNode.appendChild(messageElement);
    }
    
    messageElement.textContent = message;
    messageElement.style.color = '#4CAF50';
    messageElement.style.display = 'block';
    
    // –°–∫—Ä—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        messageElement.style.display = 'none';
    }, 3000);
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
function showErrorMessage(formElement, message) {
    // –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
    let messageElement = formElement.parentNode.querySelector('.form-message');
    
    if (!messageElement) {
        messageElement = document.createElement('div');
        messageElement.className = 'form-message';
        messageElement.style.cssText = 'text-align: center; font-size: 18px; font-weight: 600; color: #f44336; margin-top: 15px;';
        formElement.parentNode.appendChild(messageElement);
    }
    
    messageElement.textContent = message;
    messageElement.style.color = '#f44336';
    messageElement.style.display = 'block';
    
    // –°–∫—Ä—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
        messageElement.style.display = 'none';
    }, 5000);
}

// –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ SmartCAPTCHA –¥–ª—è –≤—Å–µ—Ö —Ñ–æ—Ä–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
function initSmartCaptcha() {
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Ñ–æ—Ä–º—ã
    const forms = document.querySelectorAll('form');
    
    forms.forEach(form => {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ ID —Ñ–æ—Ä–º—ã –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –∞—Ç—Ä–∏–±—É—Ç–æ–≤
        let action = 'submit';
        
        if (form.id === 'formaMainPage') {
            action = 'main_page_form';
        } else if (form.id === 'formaGusenichnyexkavator') {
            action = 'gusenichnyy_ekskavator_form';
        } else if (form.id === 'formaPogruzchik') {
            action = 'ekskavator_pogruzchik_form';
        } else if (form.id === 'formaAvtokran') {
            action = 'avtokran_form';
        } else if (form.id === 'formaAvtovyshka') {
            action = 'avtovyshka_form';
        } else if (form.id === 'formaDlinnomer') {
            action = 'dlinnomer_form';
        } else if (form.id === 'formaManipuliator') {
            action = 'manipuliator_form';
        } else if (form.id === 'formaKolesnyyEkskavator') {
            action = 'kolesnyy_ekskavator_form';
        }
        
        addSmartCaptchaToForm(form, action);
    });
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    initSmartCaptcha();
});

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
window.SmartCaptcha = {
    loadSmartCaptcha,
    getSmartCaptchaToken,
    addSmartCaptchaToForm,
    initSmartCaptcha,
    showSuccessMessage,
    showErrorMessage
};
