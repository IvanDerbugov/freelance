<?php
header('Content-Type: application/json');
header('Access-Control-Allow-Origin: *');
header('Access-Control-Allow-Methods: POST');
header('Access-Control-Allow-Headers: Content-Type');

// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ POST –∑–∞–ø—Ä–æ—Å–∞
$input = json_decode(file_get_contents('php://input'), true);

// –ï—Å–ª–∏ JSON –Ω–µ –ø–æ–ª—É—á–µ–Ω, –ø—Ä–æ–±—É–µ–º –æ–±—ã—á–Ω—ã–π POST
if (!$input) {
    $input = $_POST;
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
if (empty($input['name']) || empty($input['contact'])) {
    echo json_encode(['success' => false, 'message' => '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è']);
    exit;
}

// –û—á–∏—â–∞–µ–º –∏ –≤–∞–ª–∏–¥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
$name = htmlspecialchars(trim($input['name']));
$contact = htmlspecialchars(trim($input['contact']));
$formType = isset($input['form_type']) ? htmlspecialchars(trim($input['form_type'])) : '–î–ª–∏–Ω–Ω–æ–º–µ—Ä';

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram
$telegramToken = '7808482676:AAEM-SN7WMoy-lJlkD0LMEuDW2C_zw4AfDM';
$telegramGroupChatId = '-1002652686710'; // ID –≥—Ä—É–ø–ø—ã "–†–µ–∫–æ—Ä–¥–∏–∫–∞ –∑–∞—è–≤–∫–∏"
$telegramCustomerChatId = '7501193489'; // ID –ª–∏—á–Ω–æ–≥–æ —á–∞—Ç–∞ –î–º–∏—Ç—Ä–∏—è

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∏—Å—å–º–∞
$to = 'info-recordica@mail.ru';
$subject = "–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ –î–õ–ò–ù–ù–û–ú–ï–† - $formType";

// –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–ª–æ –ø–∏—Å—å–º–∞
$message = "
<html>
<head>
    <title>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞</title>
</head>
<body>
    <h2>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ –î–õ–ò–ù–ù–û–ú–ï–†</h2>
    <table style='border-collapse: collapse; width: 100%;'>
        <tr>
            <td style='padding: 10px; border: 1px solid #ddd; background-color: #f9f9f9; font-weight: bold;'>–¢–∏–ø —Ñ–æ—Ä–º—ã:</td>
            <td style='padding: 10px; border: 1px solid #ddd;'>$formType</td>
        </tr>
        <tr>
            <td style='padding: 10px; border: 1px solid #ddd; background-color: #f9f9f9; font-weight: bold;'>–ò–º—è:</td>
            <td style='padding: 10px; border: 1px solid #ddd;'>$name</td>
        </tr>
        <tr>
            <td style='padding: 10px; border: 1px solid #ddd; background-color: #f9f9f9; font-weight: bold;'>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</td>
            <td style='padding: 10px; border: 1px solid #ddd;'>$contact</td>
        </tr>
        <tr>
            <td style='padding: 10px; border: 1px solid #ddd; background-color: #f9f9f9; font-weight: bold;'>–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:</td>
            <td style='padding: 10px; border: 1px solid #ddd;'>" . date('d.m.Y H:i:s') . "</td>
        </tr>
        <tr>
            <td style='padding: 10px; border: 1px solid #ddd; background-color: #f9f9f9; font-weight: bold;'>IP –∞–¥—Ä–µ—Å:</td>
            <td style='padding: 10px; border: 1px solid #ddd;'>" . $_SERVER['REMOTE_ADDR'] . "</td>
        </tr>
        <tr>
            <td style='padding: 10px; border: 1px solid #ddd; background-color: #f9f9f9; font-weight: bold;'>User Agent:</td>
            <td style='padding: 10px; border: 1px solid #ddd;'>" . $_SERVER['HTTP_USER_AGENT'] . "</td>
        </tr>
    </table>
</body>
</html>
";

// –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
$telegramMessage = "üö® *–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –° –°–ê–ô–¢–ê –î–õ–ò–ù–ù–û–ú–ï–†*

üìã *–¢–∏–ø —Ñ–æ—Ä–º—ã:* $formType
üë§ *–ò–º—è:* $name
üìû *–ö–æ–Ω—Ç–∞–∫—Ç—ã:* $contact
üìÖ *–î–∞—Ç–∞:* " . date('d.m.Y H:i:s') . "
üåê *IP:* " . $_SERVER['REMOTE_ADDR'] . "

üíª *User Agent:* " . $_SERVER['HTTP_USER_AGENT'] . "";

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
function sendTelegramMessage($token, $chatId, $message) {
    $url = "https://api.telegram.org/bot{$token}/sendMessage";
    $data = [
        'chat_id' => $chatId,
        'text' => $message,
        'parse_mode' => 'Markdown'
    ];
    
    $errorLog = '';
    $success = false;
    
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º cURL (–±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø–æ—Å–æ–±)
    if (function_exists('curl_init')) {
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($data));
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_TIMEOUT, 10);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($ch, CURLOPT_HTTPHEADER, [
            'Content-Type: application/x-www-form-urlencoded'
        ]);
        
        $result = curl_exec($ch);
        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
        $curlError = curl_error($ch);
        curl_close($ch);
        
        if ($result !== false && $httpCode == 200) {
            $response = json_decode($result, true);
            if ($response && isset($response['ok']) && $response['ok']) {
                $success = true;
                $errorLog = "cURL SUCCESS: HTTP $httpCode";
            } else {
                $errorLog = "cURL API ERROR: " . ($response['description'] ?? 'Unknown error') . " (HTTP $httpCode)";
            }
        } else {
            $errorLog = "cURL FAILED: HTTP $httpCode, Error: $curlError";
        }
    }
    
    // –ï—Å–ª–∏ cURL –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø—Ä–æ–±—É–µ–º file_get_contents
    if (!$success) {
        $options = [
            'http' => [
                'method' => 'POST',
                'header' => "Content-Type: application/x-www-form-urlencoded\r\n",
                'content' => http_build_query($data),
                'timeout' => 10
            ]
        ];
        
        $context = stream_context_create($options);
        $result = @file_get_contents($url, false, $context);
        
        if ($result !== false) {
            $response = json_decode($result, true);
            if ($response && isset($response['ok']) && $response['ok']) {
                $success = true;
                $errorLog = "file_get_contents SUCCESS";
            } else {
                $errorLog .= " | file_get_contents API ERROR: " . ($response['description'] ?? 'Unknown error');
            }
        } else {
            $errorLog .= " | file_get_contents FAILED";
        }
    }
    
    return ['success' => $success, 'error' => $errorLog];
}

// –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è HTML –ø–∏—Å—å–º–∞
$headers = array(
    'MIME-Version: 1.0',
    'Content-type: text/html; charset=UTF-8',
    'From: noreply@recordica.ru',
    'Reply-To: noreply@recordica.ru',
    'X-Mailer: PHP/' . phpversion()
);

// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ
$mailSent = mail($to, $subject, $message, implode("\r\n", $headers));

// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram (–≤ –≥—Ä—É–ø–ø—É –∏ –≤ –ª–∏—á–∫—É –∑–∞–∫–∞–∑—á–∏–∫—É) —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
$telegramGroupResult = sendTelegramMessage($telegramToken, $telegramGroupChatId, $telegramMessage);
$telegramGroupSent = $telegramGroupResult['success'];
$telegramGroupError = $telegramGroupResult['error'];

$telegramCustomerResult = sendTelegramMessage($telegramToken, $telegramCustomerChatId, $telegramMessage);
$telegramCustomerSent = $telegramCustomerResult['success'];
$telegramCustomerError = $telegramCustomerResult['error'];

$telegramSent = $telegramGroupSent || $telegramCustomerSent;

if ($mailSent || $telegramSent) {
    // –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å –¥–µ—Ç–∞–ª—è–º–∏
    $logMessage = date('Y-m-d H:i:s') . " - –£—Å–ø–µ—à–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã –æ—Ç $name ($contact) [Email: " . ($mailSent ? 'OK' : 'FAIL') . ", Telegram Group: " . ($telegramGroupSent ? 'OK' : 'FAIL') . ($telegramGroupError ? " - $telegramGroupError" : "") . ", Telegram Customer: " . ($telegramCustomerSent ? 'OK' : 'FAIL') . ($telegramCustomerError ? " - $telegramCustomerError" : "") . "]\n";
    file_put_contents('form-logs.txt', $logMessage, FILE_APPEND | LOCK_EX);
    
    echo json_encode([
        'success' => true, 
        'message' => '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!'
    ]);
} else {
    // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É —Å –¥–µ—Ç–∞–ª—è–º–∏
    $logMessage = date('Y-m-d H:i:s') . " - –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –æ—Ç $name ($contact) [Email: " . ($mailSent ? 'OK' : 'FAIL') . ", Telegram Group: " . ($telegramGroupSent ? 'OK' : 'FAIL') . ($telegramGroupError ? " - $telegramGroupError" : "") . ", Telegram Customer: " . ($telegramCustomerSent ? 'OK' : 'FAIL') . ($telegramCustomerError ? " - $telegramCustomerError" : "") . "]\n";
    file_put_contents('form-logs.txt', $logMessage, FILE_APPEND | LOCK_EX);
    
    echo json_encode([
        'success' => false, 
        'message' => '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
    ]);
}
?> 